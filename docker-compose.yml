version: '3'
services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_container:/var/lib/postgresql/data

  mongo-express:
    image: mongo-express:latest
    container_name: mongo_express_local
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
    ports:
      - "8081:8081"

  mongodb:
    image: mongo:latest
    container_name: mongodb_local
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_container:/data/db

  odds-predictor:
    build:
      context: ./odds-predictor
      dockerfile: Dockerfile
    environment:
      FLASK_ENV: "development"
    ports:
      - "5555:5555"

#  scraper:
#    build:
#      context: ./scraper
#      dockerfile: Dockerfile
#    env_file:
#      - .env
#    ports:
#      - "3000:3000"
#  backend:
#    build:
#      context: ./backend
#      dockerfile: Dockerfile
#    depends_on:
#      - db
#    environment:
#      POSTGRES_HOST: db
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      POSTGRES_DB: ${POSTGRES_DB}
#    volumes:
#      - ./backend:/app
#    ports:
#      - "4000:4000"
#    command: mix phx.server

volumes:
  mongodb_data_container:
  postgres_data_container:
